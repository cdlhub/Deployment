---
- hosts: all
  become: true

  pre_tasks:

    - name: install aptitude [Debian]
      apt:
        name: aptitude
        state: present
      when: ansible_os_family == "Debian"

    # Update cache
    - name: update package cache
      package: 
        update_cache: yes

    # Upgrade system
    - name: upgrade system
      package: 
        name: "*"
        state: latest

  tasks:

    # Uninstall Docker

    # Ubuntu
    - name: uninstall docker [Debian]
      apt: 
        name: ['docker', 'docker-engine', 'docker.io', 'containerd', 'runc']
        state: absent
      when: ansible_os_family == "Debian"

    # CentOS
    - name: uninstall docker [RedHat]
      yum:
        name: ['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-selinux', 'docker-engine-selinux', 'docker-engine']
        state: absent
      when: ansible_os_family == "RedHat"

    # Install Docker CE
    # See:
    #  * https://github.com/dwdraju/ansible-install-docker
    #  * https://docs.docker.com/install/

    # Ubuntu
    - name: install required packages for docker-ce [Debian]
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg2', 'software-properties-common']
        state: present
      when: ansible_os_family == "Debian"

    - name: add docker's official apt key [Debian]
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        state: present
      register: add_key
      ignore_errors: true
      when: ansible_os_family == "Debian"

    - name: add docker apt key if failed [Debian]
      shell: "curl -sSL https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg | sudo apt-key add -"
      args:
        warn: no
      when: (add_key is failed) and (ansible_os_family == "Debian")
    
    - name: add docker stable repository [Debian]
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"
    
    # CentOS
    - name: install required packages for docker-ce [RedHat]
      yum:
        name: ['yum-utils', 'device-mapper-persistent-data', 'lvm2']
        state: present
      when: ansible_os_family == "RedHat"

    - name: add docker stable repository [RedHat]
      yum_repository:
        name: docker-ce
        description: Docker CE official repository
        baseurl: https://download.docker.com/linux/{{ ansible_distribution|lower }}/$releasever/$basearch/
      when: ansible_os_family == "RedHat"
    
    - name: disable docker-ce-edge [RedHat]
      command: "yum-config-manager --disable docker-ce-edge"
      when: ansible_os_family == "RedHat"
    
    - name: disable docker-ce-test [RedHat]
      command: "yum-config-manager --disable docker-ce-test"
      when: ansible_os_family == "RedHat"

    # - name: make cache
    #   command: "yum makecache fast"
    #   when: ansible_os_family == "RedHat"

    # All OS
    - name: update repository cache
      package:
        update_cache: yes

    - name: install docker ce
      package:
        name: docker-ce
        state: present
      notify: restart docker-ce service

    - name: log docker status
      command: "docker run hello-world"
      register: docker_hello_world

    - name: log docker status stdout
      debug: "{{ docker_hello_world.stdout }}"

    - name: log docker status stderr
      debug: "{{ docker_hello_world.stderr }}"

    - name: setting docker service deamon
      lineinfile:
        path: /lib/systemd/system/docker.service
        regexp: '^ExecStart='
        line: 'ExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock -D -H tcp://0.0.0.0:2375'
      notify: restart docker-ce service
    
    - name: ensure group docker exists
    group:
      name: docker
      state: present
    
    - name: add os user to group docker
      user:
        name: {{ ansible_distribution|lower }}
        groups: docker
        append: yes

    # handlers for docker services

    - name: restart docker-ce service
      systemd:
        name: docker
        daemon_reload: yes
        state: restarted
        enabled: yes
